services:
  database:
    image: postgres:17
    container_name: lucieperrier_prod_db
    restart: always
    environment:
      POSTGRES_USER: ${DATABASE_USER}
      POSTGRES_PASSWORD: ${DATABASE_PASSWORD}
      POSTGRES_DB: ${DATABASE_NAME}
      TZ: Europe/Paris
    networks:
      - postgres-network
    volumes:
      - lucieperrier_data:/var/lib/postgresql/data

  redis:
    image: redis:alpine
    container_name: lucieperrier_prod_redis
    ports:
      - 6379:6379
    networks:
      - postgres-network
    command: redis-server --requirepass ${REDIS_PASSWORD}
    restart: always

  api:
    container_name: lucieperrier_prod_api
    build:
      context: ../  # racine du repo
      dockerfile: apps/api/Dockerfile
    depends_on:
      - database
      - redis
    ports:
      - '3001:3001'
    networks:
      - postgres-network
    env_file:
      - ../.env
    restart: always

  web:
    container_name: lucieperrier_prod_web
    build:
      context: ../  # racine du repo
      dockerfile: apps/web/Dockerfile
    depends_on:
      - api
    ports:
      - '3000:3000'
    env_file:
      - ../.env
    restart: always
    volumes:
      - /app/node_modules
    networks:
      - postgres-network

volumes:
  lucieperrier_data:

networks:
  postgres-network:
    driver: bridge
